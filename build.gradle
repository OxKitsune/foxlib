plugins {
    id 'java'
    id 'maven-publish'
}


group = 'com.kitsune'
version = '0.0.1'
description = 'foxlib'

repositories {
    mavenLocal()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}

configurations {

    // Configuration used to shade in dependencies
    shadeImplementation
}

dependencies {

    // Annotations
    shadeImplementation 'org.jetbrains:annotations:16.0.1'

    // JUnit testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.2'
    testImplementation 'org.powermock:powermock-api-easymock:2.0.2'
    testImplementation 'org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT'

    // Make sure shade implementation works
    configurations.compile.extendsFrom(configurations.shadeImplementation)
}

// Run JUnit tests
test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

// Make sure shadeImplementation works
jar {
    from {
        configurations.shadeImplementation.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        expand 'pluginVersion': version
        include 'plugin.yml'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = description
            version = version

            from components.java
        }
    }
}

